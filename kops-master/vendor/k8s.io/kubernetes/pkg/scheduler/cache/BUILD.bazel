load("@io_bazel_rules_go//go:def.bzl", "go_library")

go_library(
    name = "go_default_library",
    srcs = [
        "cache.go",
        "interface.go",
        "node_info.go",
        "node_tree.go",
        "util.go",
    ],
    importmap = "k8s.io/kops/vendor/k8s.io/kubernetes/pkg/scheduler/cache",
    importpath = "k8s.io/kubernetes/pkg/scheduler/cache",
    visibility = ["//visibility:public"],
    deps = [
        "//vendor/github.com/golang/glog:go_default_library",
        "//vendor/k8s.io/api/core/v1:go_default_library",
        "//vendor/k8s.io/api/policy/v1beta1:go_default_library",
        "//vendor/k8s.io/apimachinery/pkg/api/resource:go_default_library",
        "//vendor/k8s.io/apimachinery/pkg/labels:go_default_library",
        "//vendor/k8s.io/apimachinery/pkg/util/sets:go_default_library",
        "//vendor/k8s.io/apimachinery/pkg/util/wait:go_default_library",
        "//vendor/k8s.io/apiserver/pkg/util/feature:go_default_library",
        "//vendor/k8s.io/kubernetes/pkg/apis/core/v1/helper:go_default_library",
        "//vendor/k8s.io/kubernetes/pkg/features:go_default_library",
        "//vendor/k8s.io/kubernetes/pkg/scheduler/algorithm/priorities/util:go_default_library",
        "//vendor/k8s.io/kubernetes/pkg/scheduler/util:go_default_library",
        "//vendor/k8s.io/kubernetes/pkg/util/node:go_default_library",
    ],
)
